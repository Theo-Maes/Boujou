name: CICD
on:
  push:
    branches:
      - fix-cicd
  pull_request:
    branches:
      - main
      - develop
    types:
      - closed
jobs:
  dependency-audit:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm audit --audit-level=high

  build:
    needs: [dependency-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: build
        run: npm run build

      - name: Cache Node.js modules and Cypress
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}

  lint:
    needs: [build]
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}
      - name: linter
        run: "npm run lint"

  # testCache:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Restore Node.js modules and Cypress cache
  #       uses: actions/cache/restore@v4
  #       with:
  #         path: |
  #           ~/.cache/Cypress
  #           ~/.npm
  #           node_modules
  #         key: node-${{ hashFiles('**/package-lock.json') }}
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v6
  #       with:
  #         install: false
  #         build: npm run build
  #         start: npm run start
  #         browser: ${{matrix.browser}}
  #     - name: Linter
  #       run: npm run lint
  test-api:
    runs-on: ubuntu-latest
    needs: [build, lint]
    environment:
      name: Tests api routes
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boujoutest
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}
      - run: echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/boujoutest" >> $GITHUB_ENV
      - run: npx prisma migrate deploy
      - run: npm run vitest
        env:
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GEOCODE_API: ${{ secrets.GEOCODE_API }}
          CYPRESS_ADMIN_USER_EMAIL: ${{ secrets.CYPRESS_ADMIN_USER_EMAIL }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASSWORD: ${{ secrets.CYPRESS_TEST_USER_PASSWORD }}
          CYPRESS_BASEURL: ${{ secrets.CYPRESS_BASEURL }}
  # test-e2e:
  #   runs-on: ubuntu-latest
  #   needs: [build, lint]
  #   environment:
  #     name: Tests UI and Api E2E
  #   services:
  #     postgres:
  #       image: postgres:15-alpine
  #       env:
  #         POSTGRES_USER: postgres
  #         POSTGRES_PASSWORD: postgres
  #         POSTGRES_DB: boujoutest
  #       ports:
  #         - 5432:5432
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3

  #     - name: Install Dependencies
  #       run: npm ci
  #     - run: npm run build

  #     - name: Run Cypress tests
  #       run: npm run e2e:run
  #       env:
  #         NEXTAUTH_URL: http://localhost:3000
  #         NEXTAUTH_SECRET: oOPZ9WewAjRcTeVsVAe6K0daibCQe4g8vfAwNiWnztU=
  #         DATABASE_URL: postgres://postgres:postgres@localhost:5432/boujoutest
  #         GEOCODE_API: 66a0a75ad545b465733868xfv7ddcd9
  #         CYPRESS_ADMIN_USER_EMAIL: john.doe@example.com
  #         CYPRESS_ADMIN_USER_PASSWORD: Secret123#
  #         CYPRESS_TEST_USER_EMAIL: john.doe@example.com
  #         CYPRESS_TEST_USER_PASSWORD: Secret123#
  #         CYPRESS_baseUrl: http://localhost:3000

  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: [test-e2e]
  #   environment:
  #     name: Deploiement
  #     url: https://edu.boujounormandie.org
  #   permissions:
  #     contents: read
  #     packages: write
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     - name: Build and push
  #       uses: docker/build-push-action@v4
  #       with:
  #         push: true
  #         tags: ghcr.io/theo-maes/boujou:latest

  # lighthouse:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Audit URLs using Lighthouse
  #       uses: treosh/lighthouse-ci-action@v12
  #       with:
  #         urls: https://edu.boujounormandie.org/
  #         uploadArtifacts: true # save results as an action artifacts
  #         temporaryPublicStorage: true # upload lighthouse report to the temporary
