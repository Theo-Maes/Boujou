name: CICD
on:
  push:
    branches:
      - fix-cicd
  pull_request:
    branches:
      - main
      - develop
    types:
      - closed
jobs:
  dependency-audit:
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: npm audit --audit-level=high

  build:
    needs: [dependency-audit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: build
        run: npm run build

      - name: Cache Node.js modules and Cypress
        uses: actions/cache/save@v4
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}

  test-api:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Tests api routes
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boujoutest
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}
      - run: npx prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
      - run: npm run vitest
        env:
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GEOCODE_API: ${{ secrets.GEOCODE_API }}
          CYPRESS_ADMIN_USER_EMAIL: ${{ secrets.CYPRESS_ADMIN_USER_EMAIL }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASSWORD: ${{ secrets.CYPRESS_TEST_USER_PASSWORD }}
          CYPRESS_BASEURL: ${{ secrets.CYPRESS_BASEURL }}
  test-e2e:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Tests UI and Api E2E
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boujoutest
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: actions/cache/restore@v4
        with:
          path: |
            ~/.cache/Cypress
            ~/.npm
            node_modules
          key: node-${{ hashFiles('**/package-lock.json') }}

      - name: Run Cypress tests
        run: npm run e2e:run
        env:
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          GEOCODE_API: ${{ secrets.GEOCODE_API }}
          CYPRESS_ADMIN_USER_EMAIL: ${{ secrets.CYPRESS_ADMIN_USER_EMAIL }}
          CYPRESS_ADMIN_USER_PASSWORD: ${{ secrets.CYPRESS_ADMIN_USER_PASSWORD }}
          CYPRESS_TEST_USER_EMAIL: ${{ secrets.CYPRESS_TEST_USER_EMAIL }}
          CYPRESS_TEST_USER_PASSWORD: ${{ secrets.CYPRESS_TEST_USER_PASSWORD }}
          CYPRESS_BASEURL: ${{ secrets.CYPRESS_BASEURL }}

  deploy:
    runs-on: ubuntu-latest
    needs: [test-e2e]
    if: github.ref_name == 'main'
    environment:
      name: Deploiement
      url: https://edu.boujounormandie.org
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/theo-maes/boujou:latest

  # lighthouse:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Audit URLs using Lighthouse
  #       uses: treosh/lighthouse-ci-action@v12
  #       with:
  #         urls: https://edu.boujounormandie.org/
  #         uploadArtifacts: true # save results as an action artifacts
  #         temporaryPublicStorage: true # upload lighthouse report to the temporary
