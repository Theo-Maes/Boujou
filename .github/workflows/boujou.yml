name: Test Boujou
run-name: ${{ github.actor }} initializing GitHub Actions
on:
  push:
    branches:
      - "lightouse"
  pull_request:
    branches:
      - main
    types:
      - closed
  # push:
  #   branches:
  #     - main
  #     - develop
  # pull_request:
  #   branches:
  #     - main
  #     - develop
jobs:
  lighthouse:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v10
        with:
          # urls: |
          #   http://3.82.101.200/
          uploadArtifacts: true

      # info:
      #   runs-on: ubuntu-latest
      #   steps:
      #     - name: Output github context
      #       run: echo "${{ toJSON(secrets) }}"
      # build:
      #   runs-on: ubuntu-latest
      #   steps:
      #     - name: Get code
      #       uses: actions/checkout@v3

      # - name: Cache Node.js modules and Cypress
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       ~/.cache/Cypress
      #       ~/.npm
      #     key: node-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Linter
        run: npm run lint
  # testCache:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: Restore Node.js modules and Cypress cache
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           ~/.cache/Cypress
  #           ~/.npm
  #         key: node-${{ hashFiles('**/package-lock.json') }}

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Linter
  #       run: npm run lint
  test-api:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: Tests api routes
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boujoutest
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm ci
      - run: echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/boujoutest" >> $GITHUB_ENV
      - run: npx prisma migrate deploy
      - run: npm run vitest
        env:
          NEXTAUTH_URL: http://localhost:3000
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/boujoutest
          GEOCODE_API: 66a0a75ad545b465733868xfv7ddcd9
          CYPRESS_ADMIN_USER_EMAIL: john.doe@example.com
          CYPRESS_ADMIN_USER_PASSWORD: Secret123#
          CYPRESS_TEST_USER_EMAIL: john.doe@example.com
          CYPRESS_TEST_USER_PASSWORD: Secret123#
          CYPRESS_baseUrl: http://localhost:3000
  test-e2e:
    runs-on: ubuntu-latest
    needs: [test-api]
    environment:
      name: Tests UI and Api E2E
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: boujoutest
        ports:
          - 5432:5432
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Dependencies
        run: npm ci
      - run: npm run build

      - name: Run Cypress tests
        run: npm run e2e:run
        env:
          NEXTAUTH_URL: http://localhost:3000
          NEXTAUTH_SECRET: oOPZ9WewAjRcTeVsVAe6K0daibCQe4g8vfAwNiWnztU=
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/boujoutest
          GEOCODE_API: 66a0a75ad545b465733868xfv7ddcd9
          CYPRESS_ADMIN_USER_EMAIL: john.doe@example.com
          CYPRESS_ADMIN_USER_PASSWORD: Secret123#
          CYPRESS_TEST_USER_EMAIL: john.doe@example.com
          CYPRESS_TEST_USER_PASSWORD: Secret123#
          CYPRESS_baseUrl: http://localhost:3000

  deploy:
    runs-on: ubuntu-latest
    needs: [test-e2e]
    environment:
      name: Deploiement
      url: https://edu.boujounormandie.org
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ghcr.io/theo-maes/boujou:latest
